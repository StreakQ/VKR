from config import adviser_logins, adviser_passwords

subjects_data = [
    "Алгебра и аналитическая геометрия",
    "Математический анализ",
    "Математический анализ, часть 2 ",
    "Программирование и основы алгоритмизации",
    "Физика ",
    "Разработка программного обеспечения систем управления",
    "Вычислительные методы",
    "Статистические методы в инженерных исследованиях",
    "Электротехника ",
    "Методы оптимизации",
    "Информационные технологии ",
    "Программное обеспечение автоматизированных систем",
    "Элементы и системы пневмоавтоматики",
    "Интеллектуальный анализ данных",
    "Функциональные узлы и схемотехника систем управления и вычислительных машин",
    "Системное программное обеспечение",
    "Элементы и системы гидроавтоматики",
    "Нейрокомпьютеры и их применение"
    ]

advisers_data = [
    ("Баларев", "Дмитрий", "Александрович", 4),
    ("Бобряков", "Александр", "Владимирович", 4),
    ("Бородкин", "Артем", "Александрович", 4),
    ("Васильев", "Алексей", "Алексеевич", 4),
    ("Державин", "Отто", "Михайлович", 4),
    ("Елисеев", "Владимир", "Леонидович", 4),
    ("Козлюк", "Дмитрий", "Александрович", 4),
    ("Косинский", "Михаил", "Юрьевич", 4),
    ("Мохов", "Андрей", "Сергеевич", 4),
    ("Полотнов", "Михаил", "Михайлович", 4),
    ("Рябов", "Сергей", "Николаевич", 4),
    ("Сидорова", "Елена", "Юрьевна", 4),
    ("Толчеев", "Владимир", "Олегович", 4),
    ("Филаретов", "Геннадий", "Федорович", 4),
    ("Шихин", "Владимир", "Анатольевич", 4),
]


themes_data = [
    "Применение микропроцессоров в автоматике",
    "Разработка информационно-аналитических систем и систем поддержки принятия решений",
    "Анализ и обработка текстовой информации (классификация многомерных данных)",
    "Нейронные сети",
    "Автоматизация технологических и энергетических процессов",
    "Структурная и параметрическая идентификация динамических объектов",
    "Декомпозиция моделей и управление в сложных динамических системах",
    "Разработка учебно-исследовательских лабораторных комплексов на базе стандартных программных средств",
    "Нейросетевое управление",
    "Обнаружение аномалий",
    "Информационная безопасность",
    "Защита доступности компьютерных сетей (DDoS-атаки)",
    "Выявление аномалий во временных рядах.",
    "Автоматизация процесса анализа телеметрической информации космических аппаратов",
    "Исследование вопросов надежности технических систем с помощью нейро-нечетких технологий",
    "Обеспечение целостности информации бортовых вычислительных устройств космических аппаратов",
    "Разработка системы управления ориентацией и стабилизацией космического аппарата",
    "Анализ и обработка текстовой информации (Text Mining)",
    "Методы интеллектуального анализа данных и машинного обучения (Data Mining, Machine Learning), включая методы поиска, визуализации, классификации, кластеризации многомерных данных и выявления информативных признаков ",
    "Проектирование и разработка компонент информационных систем",
    "Разработка программных приложений для работы с базами данных",
    "Исследование и разработка методов обработки данных и элементов систем поддержки принятия решений в информационных системах",
    "Обработка и генерация сигналов с применением статистических методов, разработка моделей и элементов автоматизированных систем",
    "Разработка программ – “интеллектуальных” агентов для поиска информации в сети Интернет; информационных Web-порталов; алгоритмов обработки неструктурированной (текстовой) информации",
    "Структурная и параметрическая идентификация динамических систем. Построение оптимальных сигналов для определения параметров линейных объектов",
    "Распознающие системы на базе искусственных нейронных сетей",
    "Цифровой анализ сигналов с применением статистических методов и искусственных нейронных сетей",
    "Интеллектуальные технологии и машинное обучение в управлении, автоматизации, прогнозировании и при обработке разнородной и разноточной информации.",
]

advisers_with_credentials = []

for i, (firstname, lastname, patronymic, number_of_places) in enumerate(advisers_data):
    username = adviser_logins[i]
    password_hash = adviser_passwords[i]
    advisers_with_credentials.append({
        "firstname": firstname,
        "lastname": lastname,
        "patronymic": patronymic,
        "number_of_places": number_of_places,
        "username": username,
        "password_hash": password_hash
    })

usernames = [adviser["username"] for adviser in advisers_with_credentials]
if len(usernames) != len(set(usernames)):
    raise ValueError("В списке advisers_with_credentials есть дублирующиеся usernames.")